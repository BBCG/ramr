% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getAMR.R
\name{getAMR}
\alias{getAMR}
\title{Search for aberrantly methylated regions}
\usage{
getAMR(
  data.ranges,
  data.samples,
  ramr.method = "IQR",
  iqr.cutoff = 5,
  pval.cutoff = 0.05,
  qval.cutoff = NULL,
  merge.window = 300,
  min.cpgs = 7,
  min.width = 1,
  exclude.range = NULL,
  cores = max(1, parallel::detectCores() - 1),
  ...
)
}
\arguments{
\item{data.ranges}{A `GRanges` object with genomic locations and corresponding
beta values included as metadata.}

\item{data.samples}{A character vector with sample names (a subset of metadata
column names).}

\item{iqr.cutoff}{A single integer >= 1. Methylation beta values differing from
the median value by more than `iqr.cutoff` interquartile ranges are considered
to be significant.}

\item{pval.cutoff}{A numeric scalar. Bonferroni correction of `pval.cutoff` by
the length of the `data.ranges` object is used to calculate `qval.cutoff` if
the latter is `NULL`.}

\item{qval.cutoff}{A numeric scalar. Used as a threshold for filtering based
on fitting non-weighted or weighted beta distributions: all p-values lower than
`qval.cutoff` are considered to be significant. If `NULL` (the default), it is
calculated using `pval.cutoff`}

\item{merge.window}{A positive integer. All significant (survived the filtering
stage) `data.ranges` genomic locations within this distance will be merged to
create AMRs.}

\item{min.cpgs}{A single integer >= 1. All AMRs containing less than `min.cpgs`
significant genomic locations are filtered out.}

\item{min.width}{A single integer >= 1 (the default). Only AMRs with the width
of at least `min.width` are returned.}

\item{exclude.range}{A numeric vector of length two. If not `NULL`, all
`data.ranges` genomic locations with their median methylation beta value within
the `exclude.range` interval are filtered out.}

\item{cores}{A single integer >= 1. Number of processes for parallel computation.}

\item{...}{Further arguments to be passed to `EnvStats::ebeta` or `ExtDist::eBeta`
functions.}
}
\value{
The output is a `GRanges` object that contain all the aberrantly
methylated regions (AMRs) for all `data.samples` samples in `data.ranges` object.
The `sample` metadata column contains an identifier of a sample to which
corresponding AMR belongs to.
}
\description{
`getAMR` returns a `GRanges` object with all the aberrantly methylated
regions (AMRs) for all samples in a dataset.
}
\details{
In the provided dataset `getAMR` compares methylation beta values of each
sample with other samples to identify rare long-range methylation aberrations.
}
\examples{
\dontrun{
  getAMR(ramr.data, ramr.samples, ramr.method="beta",
         min.cpgs=5, merge.window=1000, qval.cutoff=1e-3)
}
}
\seealso{
\code{\link{plotAMR}} for plotting AMRs, \code{\link{getUniverse}} for
info on enrichment analysis
}
